import numpy as np


if __name__ == '__main__':
    """
        ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
        生成 [low, high) 内 离散均匀 的随机整数。
        randint(low, high=None, size=None)
    """
    print(np.random.randint(0, 10, (2, 3)))
    print(np.random.randint(10, size=(2, 3)))
    '''
    [[3 4 2]
     [8 9 6]]
    [[8 5 8]
     [2 6 9]]
    '''
    # ↑↑↑ 实际运行结果不一定相同 ↑↑↑

    """
        ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
        生成 [low, high) 内 均匀分布 的随机数。
        uniform(low=0.0, high=1.0, size=None)
    """
    print(np.random.uniform(0, 10, size=(2, 3)))
    '''
    [[5.21182779 5.11626157 8.56629251]
     [1.1931238  5.30911505 6.24204875]]
    '''
    # ↑↑↑ 实际运行结果不一定相同 ↑↑↑

    """
        ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
        在0~1内均匀分布
        rand(d0, d1, ..., dn)
            dn: 每维尺寸
    """
    print(np.random.rand(*(2, 3)))
    print(np.random.rand(2, 3))
    '''
    [[0.92962219 0.16732094 0.05390979]
     [0.23992663 0.92727559 0.78644084]]
    [[0.24683463 0.12782601 0.05891696]
     [0.70316392 0.40594491 0.66938239]]
    '''
    # ↑↑↑ 实际运行结果不一定相同 ↑↑↑

    """
        ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
        均值=0，方差=1的正态分布
        randn(d0, d1, ..., dn)
    """
    print(np.random.randn(2, 3))
    '''
    [[ 0.9547362  -1.14706948 -0.33151016]
     [ 2.17233283 -1.34563996 -0.45343829]]
    '''
    # ↑↑↑ 实际运行结果不一定相同 ↑↑↑

    """
        ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
        从指定正态分布返回一个随机样本
        normal(loc=0.0, scale=1.0, size=None)
            loc  : 均值
            scale: 标准差
    """
    print(np.random.normal(100, 0.6, (2, 3)))
    '''
    [[100.63840391  99.21697378  99.73331438]
     [ 99.59894749 100.11745998  99.50230078]]
    '''
    # ↑↑↑ 实际运行结果不一定相同 ↑↑↑
